#!/bin/mksh
# $MirOS: wtf/wtf,v 1.9 2008/07/07 20:45:11 tg Exp $
# $NetBSD: wtf,v 1.7 2000/11/21 00:18:52 soren Exp $
#-
# Copyright (c) 2002, 2003, 2004, 2006, 2007, 2008
#	Thorsten “mirabilos” Glaser <tg@66h.42h.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.

acronyms=${ACRONYMDB:-/usr/share/misc/acronyms}

[[ $1 = is || $1 = ist ]] && shift

[ $# -lt 1 ] && print -u2 "Usage: $(basename $0) [is] <acronym>"

rv=0
while [ $# -gt 0 ] ; do
	target=$1
	tgsrch=$(tr '[:lower:]' '[:upper:]' <<<"$target")
	ans=$(
		while IFS= read -r line; do
			[[ $line = @($tgsrch)+([	 ])* ]] || continue
			print -r -- "${line##@($tgsrch)+([	 ])}"
		done <"$acronyms"
		whatis "$target" 2>/dev/null | while IFS= read -r line; do
			[[ $line = @($target[, ])* ]] && print -r -- "$line"
		done
		[[ -s /usr/ports/INDEX ]] && while IFS=\| read a b c d e; do
			[[ $a$d = *@($target)* ]] && \
			    print -r -- "${a}|${d%% \(uses*}"
		done </usr/ports/INDEX | sort -u | column -ts'|'
	)
	if [[ $ans != *([$IFS]) ]]; then
		print -r -- "   $target:"
		print -r -- "$ans"
	else
		print -u2 "Gee...  I don’t know what “$target” means…"
		if whence -p dict >&-; then
			print -u2 "Let’s try The Dictionary..."
			dict "$target" || let 'rv = rv ? rv : 2'
		else
			rv=1
		fi
	fi
	shift
done
exit $rv
