.\" $MirOS: wtf/wtf.1,v 1.28 2020/01/22 19:08:13 tg Exp $
.\" $NetBSD: wtf.6,v 1.4 2001/04/02 22:42:40 wiz Exp $
.\"-
.\" Copyright © 2002, 2003, 2006, 2010, 2011, 2012, 2014, 2015,
.\"		2016, 2017, 2018, 2019, 2020
.\"	mirabilos <m@mirbsd.org>
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un‐
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person’s immediate fault when using the work as intended.
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: January 22 2020 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ie d doc-volume-ds-1 .ds tT gnp
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirBSD\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el .ie "\*(tT"gnp" \{\
.	eo
.	de Mx
.	nr doc-curr-font \n[.f]
.	nr doc-curr-size \n[.ps]
.	ds doc-str-Mx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.	ds doc-str-Mx1 \*[doc-Tn-font-size]\%MirBSD\*[doc-str-Mx]
.	if !\n[doc-arg-limit] \
.	if \n[.$] \{\
.	ds doc-macro-name Mx
.	doc-parse-args \$@
.	\}
.	if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.	nr doc-arg-ptr +1
.	ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.	as doc-str-Mx1 \~\*[doc-arg\n[doc-arg-ptr]]
.	el \
.	nr doc-arg-ptr -1
.	\}
.	ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Mx1]
.	nr doc-type\n[doc-arg-ptr] 2
.	ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.	nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.	nr doc-arg-limit \n[doc-arg-ptr]
.	if \n[doc-num-args] \
.	doc-parse-space-vector
.	doc-print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[doc-Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirBSD\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirBSD\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirBSD\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.Dt WTF 1
.Os
.Sh NAME
.Nm wtf
.Nd translates acronyms for you
.Sh SYNOPSIS
.Nm
.Op Fl adPpwy
.Op Fl f Ar dbfile
.Op is \*(Ba ist \*(Ba Fl \-
.Ar acronym Ar ...
.Nm
.Fl V
.Sh DESCRIPTION
The
.Nm
utility displays the expansion of the acronyms
specified on the command line.
The following places are searched:
.Bl -tag -width Ds
.It Fl a
Search the acronym database
.Pq default .
.It Fl d
Search the dictionary.
Needs a dict client installed.
.It Fl f Ar dbfile
Overrides the default acronym database, bypassing the value of the
.Ev ACRONYMDB
variable.
.It Fl P
Search the package database or ports
.Pa INDEX .
Match in package name and description.
.It Fl p
Same as
.Fl p ,
except match in package name only.
.It Fl t Ar arg
Ignored
.Pq for compatibility .
.It Fl V
Display the version of
.Nm
and the acronyms database.
.It Fl w
Search with
.Nm whatis .
.It Fl y
Show reverse dependencies of packages
.Pq currently Nm dpkg Ns -only ;
\%every search term
.Pq Dq Ar acronym
is treated as package pattern.
.Pp
Alternative dependencies are prefixed with a pipe sign
.Pq Sq \*(Ba\& ,
\%unconditional ones with a space.
Package relationships are de\%duplicated per (real or virtual) package
expanded from the pattern: unconditional implies alternative, (Pre-)Depends
silence Recommends imply Suggests beat Enhanced-By.
.Pp
Virtual and not installed packages show up as
.Dq Li "[no version]" .
.El
.Pp
To disable an option, prefix it with a plus sign
.Pq Sq +
instead of a dash.
.Pp
If any of the
.Fl adPpw
options are given
.Pq set or unset ,
no other or default options are enabled.
.Pp
If
.Dq is
is specified on the command line, it will be ignored,
allowing the fairly natural
.Sy wtf\ is\ WTF
and, for German users,
.Sy wtf\ ist\ n8
usage.
.Pp
The search term is translated to upper case for lookup, but besides the
26 latin letters [a\-z], the only Unicode characters mapped are listed
in the first line of the acronyms database.
Furthermore, all dots will be stripped from the search term if it
contains, after case-folding, an ASCII letter [A\-Z] followed by a dot
.Pq Sq .\& .
.Sh ENVIRONMENT
.Bl -tag -width ACRONYMDB
.It Ev ACRONYMDB
The default acronym database may be overridden by setting the
environment variable
.Ev ACRONYMDB
to the name of a file in the proper format (acronym[tab]meaning).
.El
.Sh FILES
.Bl -tag -width /usr/share/misc/acronyms -compact
.It Pa /usr/share/misc/acronyms
default acronym database
.It Pa /usr/bin/dict
default search path for dictionary client
.It Pa /usr/local/bin/dict
standard search path for dictionary client
.It Pa /usr/mpkg/bin/dict
extended search path for dictionary client
.It Pa /usr/ports/INDEX
default ports index file on BSD.
.El
.Sh SEE ALSO
.Xr whatis 1
.Pp
.Pa http://www.mirbsd.org/wtf.htm
.No \*(en online acronym database query
.Pp
.Pa https://edugit.org/nik/MirWTFApp
.No \*(en Android implementation
.Pp
.Pa https://apps.apple.com/us/app/wtf/id1264589483
.No \*(en for Apple iOS
.Pp
.Pa http://www.mirbsd.org/acronyms.gz
.No \*(en live updated acronym database
.Pp
.Pa https://github.com/othyro/wtfubar
.No \*(en another fork of
.Nx No 's acronyms
.Sh HISTORY
.Nm
first appeared in
.Nx 1.5 .
It then was ported to
.Mx 0 ,
actually being the very reason for MirOS to exist.
Initially,
.Nm wtf
only translated acronyms;
functionality to look up the meaning of terms in other sources was added later.
Option processing was added in
.Mx 11 .
.Sh CAVEATS
The acronym database is a line-based file consisting of the case-folded
(see above) search term, an ASCII HT character, and the definition.
All lines without a HT (tab) character are considered comment lines.
The file must be sorted ASCIIbetically for the first column.
The list of additional lower/upper-case pairs (separated by spaces) must
be on the first line, with two leading spaces (so it sorts first).
.Pp
The
.Fl y
functionality currently ignores any architecture qualifiers on package
names, both in dpkg's package database and in the package relationships.
This is because it's implemented without requiring \%libdpkg\-perl and in
a portable way in shell.
.Sh FEEDBACK
.An mirabilos Aq m@mirbsd.org
maintains
.Nm
and the acronym database; please send any suggestions to him.
